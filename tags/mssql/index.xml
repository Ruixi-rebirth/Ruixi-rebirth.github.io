<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mssql on ruixi-Let's Go!</title><link>https://ruixi.me/tags/mssql/</link><description>Recent content in Mssql on ruixi-Let's Go!</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Apr 2022 17:55:28 +0800</lastBuildDate><atom:link href="https://ruixi.me/tags/mssql/index.xml" rel="self" type="application/rss+xml"/><item><title>Mssql02_1</title><link>https://ruixi.me/p/mssql02_1/</link><pubDate>Mon, 18 Apr 2022 17:55:28 +0800</pubDate><guid>https://ruixi.me/p/mssql02_1/</guid><description>CREATE 创建数据库 数据库 被定义为一组结构化的数据,因此，在 SQL 中，以结构良好的方式存储数据的第一步是创建数据库。
语法 CREATE DATABASE database_name; 示例 CREATE DATABASE StudentScore; 创建表 我们已经在上面了解了创建数据库。 现在要存储数据，我们需要一个表来执行此操作。 CREATE TABLE 语句用于在 SQL 中创建表。 我们知道一个表由行和列组成。 因此，在创建表时，我们必须向 SQL 提供有关列名、要存储在列中的数据类型、数据大小等所有信息。现在让我们深入了解如何使用 CREATE TABLE 语句创建 SQL 中的表。
语法 CREATE TABLE table_name ( column1 data_type(size), column2 data_type(size), column3 data_type(size), .... ); 示例 1 CREATE TABLE Students ( Sno int(3), Sname varchar(20), Sage varchar(20), ); 示例 2 建立一个“学生”表 Student、它由学号 Sno、学生姓名 Sname、性别 Ssex、年龄 Sage、所在系 Sdept 组成，其中 Sno 为主码
CREATE TABLE Student( Sno CHAR(9) PRIMARY KEY, Sname CHAR(20) UNIQUE, Ssex CHAR(2), Sage SMALLINT, Sdept CHAR(20) ); 示例 3 建立一个“课程”表 Course,它由课程号 Cno、课程名 Cname、先行课号 Cpno、学分 Ccredit 组成，其中 Cno 为主码</description></item><item><title>Mssql02</title><link>https://ruixi.me/p/mssql02/</link><pubDate>Mon, 18 Apr 2022 17:35:01 +0800</pubDate><guid>https://ruixi.me/p/mssql02/</guid><description>众所周知，结构化查询语言（SQL）是一种数据库语言，通过它我们可以对现有的数据库执行某些操作，也可以使用这种语言来创建数据库。 SQL 使用某些命令（如 Create、Drop、Insert 等）来执行所需的任务。 这些 SQL 命令主要分为四类：
DDL – 数据定义语言 DQL – 数据查询语言 DML – 数据操作语言 DCL – 数据控制语言 尽管许多资源声称存在另一类 SQL 子句 TCL – 事务控制语言 。 因此，我们还将详细了解 TCL。 DDL（数据定义语言） DDL 或数据定义语言实际上由可用于定义数据库模式的 SQL 命令组成。 它只处理数据库模式的描述，并用于创建和修改数据库中的数据库对象的结构。DDL 是一组用于创建、修改和删除数据库结构而不是数据的 SQL 命令。 这些命令通常不被一般用户使用，他们应该通过应用程序访问数据库
DDL 命令列表：
CREATE ：此命令用于创建数据库或其对象（如表、索引、函数、视图、存储过程和触发器）。 DROP ：此命令用于从数据库中删除对象。 ALTER ： 这用于更改数据库的结构。 TRUNCATE ： 这用于从表中删除所有记录，包括删除为记录分配的所有空间。 COMMENT ：用于向数据字典添加注释。 RENAME ： 这用于重命名数据库中存在的对象。 操作对象 操作方式/创建 操作方式/删除 操作方式/修改 数据库 CREATE DATABASE DROP DATABASE 表 CREATE TABLE DROP TABLE ALTER TABLE 视图 CREATE VIEW DROP VIEW 索引 CREATE INDEX DROP INDEX DQL（数据查询语言） DQL 语句用于对模式对象中的数据执行查询。 DQL 命令的目的是根据传递给它的查询获取一些模式关系。 我们可以将 DQL 定义如下，它是 SQL 语句的一个组件，允许从数据库中获取数据并对其进行排序。 它包括 SELECT 语句。 此命令允许从数据库中获取数据以对其执行操作。 当对一个或多个表触发 SELECT 时，结果会编译到另一个临时表中，该表会显示或可能由程序（即前端）接收。</description></item><item><title>Mssql01</title><link>https://ruixi.me/p/mssql01/</link><pubDate>Sat, 16 Apr 2022 12:56:25 +0800</pubDate><guid>https://ruixi.me/p/mssql01/</guid><description>数据 描述事物的符号记录 数据库 长期存储在计算机内、有组织的、可共享的大量数据的集合 DBMS(Database Manager System) 数据库管理软件。如mysql,sqlserver,mariadb,Access等等内部都内置了各种的DBMS,所以也称这些都是DBMS,换言之，目前流行的DBMS有mysql,sqlserver等等 DBS 数据库系统也简称为数据库。由数据库，DBMS及其开发工具、应用程序(如学生管理系统的前台界面)、DBA及其用户构成 数据模型 (1)概念模型：按照用户的观点来对数据和信息建模（很重要，会影响到逻辑模型和物理模型） (2)逻辑模型和物理模型：主要包括网状模型、层次模型、关系模型等，它是按照计算机系统的观点对数据建模。用于DBMS的实现 数据模型的组成要素 1.数据结构 2.数据操作 3.数据的约束条件 实体 如一个学生、老师与院系的工作关系等 属性 如学生实体中的姓名、学号等 码 唯一标识实体的属性集。如学生实体的学号 域 属性的取值范围。如性别域（男、女） 实体型 实体名及其属性名集合来抽象刻画同类实体。如学生(姓名 学号 班级)就是一个实体型 实体集 如全体学生 概念模型标识方法 E-R 方法 即实体-联系方法 数据库系统的三级模式 模式(逻辑模式)是全体数据，外模式(子模式)是全体数据中的某一部分，内模式也称存储模式 外模式/模式映像 定义了外模式与模式之间的对应关系 每个外模式都对应一个外模式/模式映像（映像数量多个） 映像定义通常包含在各自外模式的描述中 模式/内模式映像 定义了数据全局逻辑结构与存储结构之间的对应关系 数据库中模式/内模式映像是唯一的 该映像的定义通常包含在模式描述中 关系数据模型 其数据结构是一张二维的表格
候选码 能够被选为主码的属性或属性组，说明主码不唯一 主属性 定义：包含在任何候选码中的属性(主码一定是候选码，候选码不一定是主码，因为主码是人选的，是随机的) 例：比如，竞赛表（竞赛编号，竞赛名称，竞赛组织者） PS：竞赛名称和竞赛组织者都可以重复
很明显可以看出竞赛编号能够唯一标识整张竞赛表，因此候选码是竞赛编号，并且仅此一个候选码，其他属性都不能唯一标识整张表，所竞赛编号同时也是主码。
这时候判断一下这几个属性 or 属性组是否是主属性，（竞赛编号）（竞赛编号，竞赛名称）（竞赛名称，竞赛组织者），（竞赛编号）只有一个属性，这个属性是主码，主码必定为候选码，因此属性含有一个候选码，这个属性是主属性。（竞赛编号，竞赛名称）有两个属性，其中竞赛编号是候选码，而竞赛名称不是候选码，那他是啥呢~前面有提到了，因为它跟候选码在同一个属性组里，所以，竞赛名称是超码，回过头来，最后得出该属性组含有了一个候选码，因此该属性组中的各个属性都是主属性。（竞赛名称，竞赛组织者）有两个属性，可以看出这两个属性都不是候选码，因此这个属性组不包含候选码，属性组中中得各个元素称为非主属性。
misc 主码=主键=主关键字，关键字=候选码 候选关键字=候选码中除去主码的其他候选码 分量 如在二位表格中的单元格的值。关系的分量必须是一个不可分的数据项(如工资被分为奖金、工龄、基本，这样对于关系来说是不规范的) 元组 表中的每行（即数据库中的每条记录）就是一个元组;元组的个数为基数 目（度） 属性个数，也即列数 关系模型中的三类完整性约束 1. 实体完整性 2. 参照完整性 3.</description></item></channel></rss>