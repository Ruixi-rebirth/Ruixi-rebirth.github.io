<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mssql on ruixi-Let's Go!</title><link>https://ruixi.me/tags/mssql/</link><description>Recent content in mssql on ruixi-Let's Go!</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 16 Apr 2022 12:56:38 +0800</lastBuildDate><atom:link href="https://ruixi.me/tags/mssql/index.xml" rel="self" type="application/rss+xml"/><item><title>Mssql05</title><link>https://ruixi.me/p/mssql05/</link><pubDate>Sat, 16 Apr 2022 12:56:38 +0800</pubDate><guid>https://ruixi.me/p/mssql05/</guid><description/></item><item><title>Mssql03</title><link>https://ruixi.me/p/mssql03/</link><pubDate>Sat, 16 Apr 2022 12:56:34 +0800</pubDate><guid>https://ruixi.me/p/mssql03/</guid><description>候选码 能够被选为主码的属性或属性组，说明主码不唯一 主属性 定义：包含在任何候选码中的属性(主码一定是候选码，候选码不一定是主码，因为主码是人选的，是随机的) 例：比如，竞赛表（竞赛编号，竞赛名称，竞赛组织者） PS：竞赛名称和竞赛组织者都可以重复
很明显可以看出竞赛编号能够唯一标识整张竞赛表，因此候选码是竞赛编号，并且仅此一个候选码，其他属性都不能唯一标识整张表，所竞赛编号同时也是主码。
这时候判断一下这几个属性 or 属性组是否是主属性，（竞赛编号）（竞赛编号，竞赛名称）（竞赛名称，竞赛组织者），（竞赛编号）只有一个属性，这个属性是主码，主码必定为候选码，因此属性含有一个候选码，这个属性是主属性。（竞赛编号，竞赛名称）有两个属性，其中竞赛编号是候选码，而竞赛名称不是候选码，那他是啥呢~前面有提到了，因为它跟候选码在同一个属性组里，所以，竞赛名称是超码，回过头来，最后得出该属性组含有了一个候选码，因此该属性组中的各个属性都是主属性。（竞赛名称，竞赛组织者）有两个属性，可以看出这两个属性都不是候选码，因此这个属性组不包含候选码，属性组中中得各个元素称为非主属性。
misc 主码=主键=主关键字，关键字=候选码 候选关键字=候选码中除去主码的其他候选码 元组 表中的每行（即数据库中的每条记录）就是一个元组;元组的个数为基数 目（度） 属性个数，也即列数 关系模型中的三类完整性约束 1. 实体完整性 2. 参照完整性 3. 用户定义完整性 实体完整性 实体完整性规则规定基本关系的所有主属性不能取空值，当我给某个表设置主键时，由于给主属性设置了空值，始终创建不了主码 参照完整性 在关系模型中实体与实体之间的联系都是用关系来描述的，因此存在关系与关系之间的引用 外码 设F是基本关系R中的一个或一组属性，但不是关系R的码。如果F与基本关系S中的主码K相对应，那么F是基本关系R的外码（外码取值可取空值，因为不是主属性;外码可取S中某个元组的主码值） 参照关系 外码所在的关系，即关系R为参照关系 被参照关系(目标关系) 关系S为参照关系
例 1
外码：专业 参照关系:学生关系 被参照关系：专业关系
例 2
外码：学号、课程号 参照关系:选修 被参照关系：学生关系、课程关系
例 3
外码：班长 参照关系:学生关系 被参照关系：学生关系
用户定义完整性 例：课程(课程号，课程名，学分) 主码为课程号 - “课程名”属性必须取唯一值 - 非主属性“课程名”不能取空值 - “学分”属性只能取值{1,2,3,4} 关系代数运算的分类 1.</description></item><item><title>Mssql02</title><link>https://ruixi.me/p/mssql02/</link><pubDate>Sat, 16 Apr 2022 12:56:30 +0800</pubDate><guid>https://ruixi.me/p/mssql02/</guid><description>###关系数据模型（其数据结构是一张二维的表格）
分量 如在二位表格中的单元格的值。关系的分量必须是一个不可分的数据项(如工资被分为奖金、工龄、基本，这样对于关系来说是不规范的) 数据库系统的三级模式 模式(逻辑模式)是全体数据，外模式(子模式)是全体数据中的某一部分，内模式也称存储模式 外模式/模式映像 定义了外模式与模式之间的对应关系 每个外模式都对应一个外模式/模式映像（映像数量多个） 映像定义通常包含在各自外模式的描述中 模式/内模式映像 定义了数据全局逻辑结构与存储结构之间的对应关系 数据库中模式/内模式映像是唯一的 该映像的定义通常包含在模式描述中</description></item><item><title>Mssql01</title><link>https://ruixi.me/p/mssql01/</link><pubDate>Sat, 16 Apr 2022 12:56:25 +0800</pubDate><guid>https://ruixi.me/p/mssql01/</guid><description>数据 描述事物的符号记录 数据库 长期存储在计算机内、有组织的、可共享的大量数据的集合 DBMS(Database Manager System) 数据库管理软件。如mysql,sqlserver,mariadb,Access等等内部都内置了各种的DBMS,所以也称这些都是DBMS,换言之，目前流行的DBMS有mysql,sqlserver等等 DBS 数据库系统也简称为数据库。由数据库，DBMS及其开发工具、应用程序(如学生管理系统的前台界面)、DBA及其用户构成 数据模型 (1)概念模型：按照用户的观点来对数据和信息建模（很重要，会影响到逻辑模型和物理模型） (2)逻辑模型和物理模型：主要包括网状模型、层次模型、关系模型等，它是按照计算机系统的观点对数据建模。用于DBMS的实现 数据模型的组成要素 1.数据结构 2.数据操作 3.数据的约束条件 实体 如一个学生、老师与院系的工作关系等 属性 如学生实体中的姓名、学号等 码 唯一标识实体的属性集。如学生实体的学号 域 属性的取值范围。如性别域（男、女） 实体型 实体名及其属性名集合来抽象刻画同类实体。如学生(姓名 学号 班级)就是一个实体型 实体集 如全体学生 概念模型标识方法 E-R 方法 即实体-联系方法</description></item><item><title>mssql04</title><link>https://ruixi.me/p/mssql04/</link><pubDate>Sat, 16 Apr 2022 10:17:03 +0800</pubDate><guid>https://ruixi.me/p/mssql04/</guid><description>运算符 含义 ∪ 并 - 差 ∩ 交 × 笛卡尔积 σ 选择 π 投影 ⋈ 连接 ÷ 除 专门的关系运算 选择、投影、连接、除 记号 R, t∈ R, t[Ai]
设关系模式为 R(A1,A2,……,An) t∈ R 表示 t 是 R 的一个元组 t[Ai]表示元组 t 中对应属性 Ai的一个分量(单元格的值) A, t[A], $\overline{A}$ 若 A={Ai1,Ai2,……,Aik}</description></item></channel></rss>